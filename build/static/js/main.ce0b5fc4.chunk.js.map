{"version":3,"sources":["Components/body/MenuItem.js","Components/body/Spinner/Spinner.js","Components/body/LoadComments.js","Components/body/CommentForm.js","Components/body/DishDetail.js","redux/actionTypes.js","redux/actionCreators.js","Components/body/body.js","redux/authActionCreators.js","Components/Auth/Auth.js","Components/Auth/Logout.js","Components/header/Header.js","Components/body/Catagories/Breakfast/Breakfast.js","Components/body/Catagories/Lunch/Lunch.js","Components/body/Catagories/Shakes/Shakes.js","Components/MainComponents.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItem","className","Card","style","textAlign","textTransform","CardImg","src","this","props","dishItem","img","alt","title","CardBody","fontWeight","letterSpacing","price","CardFooter","cursor","onClick","onDishSelect","Component","Spinner","class","LoadComments","commentsIsLoading","comments","map","comment","padding","author","dateFormat","date","CommentForm","handleInputChange","e","setState","target","name","value","handleSubmit","addComment","dishId","state","preventDefault","bind","form","token","Alert","color","Form","onSubmit","Input","type","placeholder","onChange","required","Button","connect","dishes","DishDetail","dish","CardText","desc","id","ADD_COMMENT","LOAD_COMMENTS","COMMENTS_LOADING","LOAD_DISHES","DISHES_LOADING","DISHES_FAILED","AUTH_SUCCESS","AUTH_LOADING","AUTH_LOGOUT","AUTH_FAILED","dispatch","newComment","Date","toISOString","axios","post","then","res","data","commentConcat","actionTypes","payload","fetchComments","get","com","fetchDishes","response","loadDishes","catch","error","errMsg","message","Body","dishSelect","isModalOpen","item","goBack","document","isLoading","menu","dishDetail","filter","Modal","isOpen","ModalBody","ModalFooter","authSuccess","userId","authLoading","auth","email","password","mode","authData","returnSecureToken","authUrl","console","log","localStorage","setItem","idToken","localId","expirationTime","getTime","expiresIn","err","logout","removeItem","Auth","switchModeHandler","authFailedMsg","initialValues","passwordConfirm","values","validate","errors","test","length","handleChange","border","borderRadius","margin","width","backgroundColor","Logout","to","Header","isNavOpen","links","NavItem","Navbar","height","NavbarBrand","href","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","marginTop","DropdownItem","divider","Breakfast","ditem","category","Lunch","Shakes","MainComponents","authCheck","path","exact","component","minHeight","getItem","Reducer","combineReducers","dishState","action","commentState","concat","myStore","createStore","applyMiddleware","thunk","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","getElementById"],"mappings":"iRAoCeA,E,4JA9BX,WAAU,IAAD,OAEL,OACI,sBAAKC,UAAU,wBAAf,UAEI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,OAAQC,cAAe,cAAgBJ,UAAU,UAA3E,UAEI,cAACK,EAAA,EAAD,CAASC,IAAK,yBAA2BC,KAAKC,MAAMC,SAASC,IAAKC,IAAKJ,KAAKC,MAAMC,SAASG,MAAOZ,UAAU,YAE5G,eAACa,EAAA,EAAD,WACI,uCAAU,sBAAMX,MAAO,CACnBY,WAAY,OACZC,cAAe,OAFT,SAGNR,KAAKC,MAAMC,SAASG,QAHxB,OAKA,wCAAWL,KAAKC,MAAMC,SAASO,MAA/B,WAIJ,cAACC,EAAA,EAAD,CAAYjB,UAAU,aAAaE,MAAO,CAAEgB,OAAQ,UAAWf,UAAW,UAAYgB,QAAS,kBAAM,EAAKX,MAAMY,aAAa,EAAKZ,MAAMC,WAAxI,8BAGJ,+B,GAxBOY,a,0BCMRC,G,MARC,WACZ,OACI,8BACI,qBAAKC,MAAM,SAAX,4BCuBGC,EAxBM,SAAAhB,GACjB,IAAIA,EAAMiB,kBAIN,OAEIjB,EAAMkB,SAASC,KAAI,SAAAC,GACf,OACI,sBAAK1B,MAAO,CAAE2B,QAAS,QAAvB,UACI,6BAAKD,EAAQE,SACb,2CAAcF,EAAQA,WAEtB,uCAAUG,IAAWH,EAAQI,KAAM,gCAAnC,c,2DCLlBC,E,kDACF,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IAUV0B,kBAAoB,SAACC,GACjB,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAO,CAACH,EAAEE,OAAOE,UAbhB,EAgBnBC,aAAe,SAACL,GACZ,EAAK3B,MAAMiC,WAAW,EAAKjC,MAAMkC,OAAQ,EAAKC,MAAMb,OAAQ,EAAKa,MAAMf,SACvE,EAAKQ,SAAS,CACVN,OAAQ,GACRF,QAAS,KAGbO,EAAES,kBApBF,EAAKD,MAAQ,CACTb,OAAQ,GACRF,QAAS,IAEb,EAAKM,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBACzB,EAAKL,aAAe,EAAKA,aAAaK,KAAlB,gBARL,E,0CAyBnB,WACI,IAAIC,EAAO,KA0BX,OAxBIA,EADqB,OAArBvC,KAAKC,MAAMuC,MACJ,cAACC,EAAA,EAAD,CAAOC,MAAM,SAAb,oDAIH,eAACC,EAAA,EAAD,CAAMC,SAAU5C,KAAKiC,aAArB,UACI,cAACY,EAAA,EAAD,CACIC,KAAK,OACLf,KAAK,SACLC,MAAOhC,KAAKoC,MAAMb,OAClBwB,YAAY,cACZC,SAAUhD,KAAK2B,kBAAmBsB,UAAQ,IAC9C,uBACA,cAACJ,EAAA,EAAD,CACIC,KAAK,WACLf,KAAK,UACLC,MAAOhC,KAAKoC,MAAMf,QAClB0B,YAAY,iBACZC,SAAUhD,KAAK2B,kBACfsB,UAAQ,IACZ,uBACA,cAACC,EAAA,EAAD,CAAQJ,KAAK,SAAb,+BAKR,8BACKP,Q,GAvDSzB,aA4DXqC,eAnES,SAAAf,GAEpB,MAAO,CACHI,MAAOJ,EAAMgB,OAAOZ,SAgEbW,CAAyBzB,GC1BzB2B,E,4JAxCb,WACE,OACE,8BACE,eAAC3D,EAAA,EAAD,CACEC,MAAO,CACLC,UAAW,OACXC,cAAe,cAEjBJ,UAAU,WALZ,UAOE,cAACK,EAAA,EAAD,CACEC,IAAK,yBAA2BC,KAAKC,MAAMqD,KAAKnD,IAChDC,IAAKJ,KAAKC,MAAMqD,KAAKjD,MACrBZ,UAAU,aAGZ,eAACa,EAAA,EAAD,WACE,oBAAGX,MAAO,CAAEY,WAAY,UAAxB,mBACSP,KAAKC,MAAMqD,KAAKjD,MAAO,OAEhC,wCAAWL,KAAKC,MAAMqD,KAAK7C,MAA3B,QACA,eAAC8C,EAAA,EAAD,4BAAyBvD,KAAKC,MAAMqD,KAAKE,WAE3C,uBACA,cAACD,EAAA,EAAD,UACE,cAAC,EAAD,CACEpC,SAAUnB,KAAKC,MAAMkB,SACrBD,kBAAmBlB,KAAKC,MAAMiB,sBAGlC,cAAC,EAAD,CACEgB,WAAYlC,KAAKC,MAAMiC,WACvBC,OAAQnC,KAAKC,MAAMqD,KAAKG,c,GAjCX3C,a,oCCLZ4C,EAAc,cACdC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAAc,cACdC,EAAiB,iBACjBC,EAAgB,gBAEhBC,EAAe,eACfC,EAAe,eACfC,EAAc,cACdC,EAAc,c,iBCPdjC,EAAa,SAACC,EAAQZ,EAAQF,GAAjB,OAA6B,SAAA+C,GACnD,IAAMC,EAAa,CACflC,OAAQA,EACRZ,OAAQA,EACRF,QAASA,GAEbgD,EAAW5C,MAAO,IAAI6C,MAAOC,cAC7BC,IAAMC,KAAK,kCAAmCJ,GACzCK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAArD,GAAO,OAAI+C,EAASS,EAAcxD,SAGnCwD,EAAgB,SAAAxD,GACzB,MAAO,CACHyB,KAAMgC,EACNC,QAAS1D,IAoBJ2D,EAAgB,kBAAM,SAAAZ,GAC/BA,EAjBO,CACHtB,KAAMgC,IAiBVN,IAAMS,IAAI,mCACLP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAAQ,GAAG,OAAId,EAfV,CACHtB,KAAMgC,EACNC,QAamCG,SAgB9BC,EAAc,kBAAM,SAAAf,GAC7BA,EAZO,CACHtB,KAAMgC,IAYVN,IAAMS,IAAI,iCAELP,MAAK,SAAAU,GAAQ,OAAIA,EAASR,QAC1BF,MAAK,SAAAtB,GAAM,OAAIgB,EA/BE,SAAAhB,GACtB,MAAO,CACHN,KAAMgC,EACNC,QAAS3B,GA4BgBiC,CAAWjC,OACnCkC,OAAM,SAAAC,GAAK,OAAInB,GAbGoB,EAakBD,EAAME,QAZxC,CACH3C,KAAMgC,EACNC,QAASS,KAHU,IAAAA,OC7BrBE,E,4MACFtD,MAAQ,CAEJuD,WAAY,KACZC,aAAa,G,EAEjB/E,aAAe,SAAAgF,GAEX,EAAKhE,SAAS,CACV8D,WAAYE,EACZD,aAAc,EAAKxD,MAAMwD,e,EAGjCE,OAAS,WACL,EAAKjE,SAAS,CACV+D,aAAc,EAAKxD,MAAMwD,e,uDAGjC,WACI5F,KAAKC,MAAMkF,cACXnF,KAAKC,MAAM+E,kB,oBAEf,WAAU,IAAD,OAEL,GADAe,SAAS1F,MAAQ,gBACbL,KAAKC,MAAMmD,OAAO4C,UAClB,OAAO,cAAC,EAAD,IAEN,GAAgC,MAA5BhG,KAAKC,MAAMmD,OAAOoC,OAEvB,OAAO,cAAC/C,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuB1C,KAAKC,MAAMmD,OAAOoC,SAGhD,IAAMS,EAAOjG,KAAKC,MAAMmD,OAAOA,OAAOhC,KAAI,SAAAyE,GACtC,OACI,cAAC,EAAD,CACI3F,SAAU2F,EAEVhF,aAAc,EAAKA,cADdgF,EAAKpC,OAIlByC,EAAa,KACjB,GAA6B,MAAzBlG,KAAKoC,MAAMuD,WAAoB,CAC/B,IAAMxE,EAAWnB,KAAKC,MAAMkB,SAASA,SAASgF,QAAO,SAAA9E,GACjD,OAAOA,EAAQc,SAAW,EAAKC,MAAMuD,WAAWlC,MAEpDyC,EAAa,cAAC,EAAD,CACT5C,KAAMtD,KAAKoC,MAAMuD,WACjBxE,SAAUA,EACVe,WAAYlC,KAAKC,MAAMiC,WACvBhB,kBAAmBlB,KAAKC,MAAMkB,SAAS6E,YAE/C,OACI,8BACI,sBAAKvG,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACKwG,IAEL,qBAAKxG,UAAU,MAAf,SACI,eAAC2G,EAAA,EAAD,CAAOC,OAAQrG,KAAKoC,MAAMwD,YAA1B,UACI,cAACU,EAAA,EAAD,UACKJ,IAEL,cAACK,EAAA,EAAD,UACI,cAACrD,EAAA,EAAD,CAAQtC,QAASZ,KAAK8F,OAAQpD,MAAM,YAApC,mC,GA/DjB5B,aA0EJqC,eAvFS,SAACf,GACrB,MAAO,CACHgB,OAAQhB,EAAMgB,OACdjC,SAAUiB,EAAMjB,aAGG,SAACiD,GACxB,MAAO,CACHlC,WAAY,SAACC,EAAQZ,EAAQF,GAAjB,OAA6B+C,EAASlC,EAAWC,EAAQZ,EAAQF,KAC7E8D,YAAa,kBAAMf,EAASe,MAC5BH,cAAe,kBAAMZ,EAASY,SA6EvB7B,CAA6CuC,G,0GC9F/Cc,GAAc,SAAChE,EAAOiE,GAC/B,MAAO,CACH3D,KAAMgC,EACNC,QAAS,CACLvC,MAAOA,EACPiE,OAAQA,KAIPC,GAAc,SAAAV,GACvB,MAAO,CACHlD,KAAMgC,EACNC,QAASiB,IAWJW,GAAO,SAACC,EAAOC,EAAUC,GAAlB,OAA2B,SAAA1C,GAC3CA,EAASsC,IAAY,IACrB,IAAMK,EAAW,CACbH,MAAOA,EACPC,SAAUA,EACVG,mBAAmB,GAEnBC,EAAU,KAEVA,EADS,YAATH,EACU,iEAGA,6EAGdtC,IAAMC,KAAKwC,EADK,0CACcF,GACzBrC,MAAK,SAAAU,GACF8B,QAAQC,IAAI/B,GACZhB,EAASsC,IAAY,IACrBU,aAAaC,QAAQ,QAASjC,EAASR,KAAK0C,SAC5CF,aAAaC,QAAQ,SAAUjC,EAASR,KAAK2C,SAC7C,IAAMC,EAAiB,IAAIlD,MAAK,IAAIA,MAAOmD,UAAsC,IAA1BrC,EAASR,KAAK8C,WACrEN,aAAaC,QAAQ,iBAAkBG,GACvCpD,EAASoC,GAAYpB,EAASR,KAAK0C,QAASlC,EAASR,KAAK2C,aAE7DjC,OAAM,SAAAqC,GAhCW,IAAAnC,EAiCd0B,QAAQC,IAAIQ,GACZvD,EAASsC,IAAY,IACrBtC,GAnCcoB,EAmCMmC,EAAIvC,SAASR,KAAKW,MAAME,QAlC7C,CACH3C,KAAMgC,EACNC,QAASS,UAoCJoC,GAAS,WAIlB,OAHAR,aAAaS,WAAW,SACxBT,aAAaS,WAAW,UACxBT,aAAaS,WAAW,kBACjB,CACH/E,KAAMgC,IC5CRgD,G,4MACJ1F,MAAQ,CACN0E,KAAM,W,EAGRiB,kBAAoB,WAClB,EAAKlG,SAAS,CACZiF,KAA0B,YAApB,EAAK1E,MAAM0E,KAAqB,QAAU,a,4CAIpD,WAAU,IAAD,OACPf,SAAS1F,MAAQ,QACjB,IAAImF,EAAS,KACoB,OAA7BxF,KAAKC,MAAM+H,gBACbxC,EAAS,cAAC/C,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuB1C,KAAKC,MAAM+H,iBAE7C,IAAIzF,EAAO,KAiHX,OA/GEA,EADEvC,KAAKC,MAAMyG,YACN,cAAC,EAAD,IAGL,cAAC,KAAD,CACEuB,cAAe,CACbrB,MAAO,GACPC,SAAU,GACVqB,gBAAiB,IAEnBtF,SAAU,SAACuF,GACT,EAAKlI,MAAM0G,KAAKwB,EAAOvB,MAAOuB,EAAOtB,SAAU,EAAKzE,MAAM0E,MAC1DI,QAAQC,IAAIgB,IAEdC,SAAU,SAACD,GACT,IAAME,EAAS,GAwBf,OAtBKF,EAAOvB,MAGT,2CAA2C0B,KAAKH,EAAOvB,SAExDyB,EAAOzB,MAAQ,yBAJfyB,EAAOzB,MAAQ,WAOZuB,EAAOtB,SAEDsB,EAAOtB,SAAS0B,OAAS,IAClCF,EAAOxB,SAAW,iCAFlBwB,EAAOxB,SAAW,WAKI,YAApB,EAAKzE,MAAM0E,OACRqB,EAAOD,gBAEDC,EAAOtB,WAAasB,EAAOD,kBACpCG,EAAOH,gBAAkB,iCAFzBG,EAAOH,gBAAkB,YAMtBG,GAnCX,SAsCG,gBAAGF,EAAH,EAAGA,OAAQK,EAAX,EAAWA,aAAcvG,EAAzB,EAAyBA,aAAcoG,EAAvC,EAAuCA,OAAvC,OACC,sBACE1I,MAAO,CACL8I,OAAQ,iBACRnH,QAAS,OACToH,aAAc,MAGdC,OAAQ,WAEVlJ,UAAU,WATZ,UAWE,yBACEE,MAAO,CACLiJ,MAAO,OACPC,gBAAiB,UACjBnG,MAAO,SAETjD,UAAU,aACVmB,QAAS,EAAKmH,kBAPhB,uBASiC,YAApB,EAAK3F,MAAM0E,KAAqB,QAAU,aAEvD,uBACA,uBACA,uBAAMlE,SAAUX,EAActC,MAAO,GAArC,UACE,uBACEoC,KAAK,QACLgB,YAAY,mBACZtD,UAAU,eACVuC,MAAOmG,EAAOvB,MACd5D,SAAUwF,IAEZ,sBAAM7I,MAAO,CAAE+C,MAAO,OAAtB,SAAgC2F,EAAOzB,QACvC,uBACA,uBACE7E,KAAK,WACLgB,YAAY,WACZtD,UAAU,eACVuC,MAAOmG,EAAOtB,SACd7D,SAAUwF,IAEZ,sBAAM7I,MAAO,CAAE+C,MAAO,OAAtB,SAAgC2F,EAAOxB,WACvC,uBAEqB,YAApB,EAAKzE,MAAM0E,KACV,gCACE,uBACE/E,KAAK,kBACLgB,YAAY,mBACZtD,UAAU,eACVuC,MAAOmG,EAAOD,gBACdlF,SAAUwF,IAEZ,sBAAM7I,MAAO,CAAE+C,MAAO,OAAtB,SACG2F,EAAOH,kBAEV,0BAEA,KAEJ,wBAAQpF,KAAK,SAASrD,UAAU,kBAAhC,SACuB,YAApB,EAAK2C,MAAM0E,KAAqB,UAAY,mBASzD,gCACGtB,EACAjD,S,GArIUzB,aA2IJqC,gBAlJS,SAACf,GACvB,MAAO,CACLsE,YAAatE,EAAMgB,OAAOsD,YAC1BsB,cAAe5F,EAAMgB,OAAO4E,kBARL,SAAC5D,GAC1B,MAAO,CACLuC,KAAM,SAACC,EAAOC,EAAUC,GAAlB,OAA2B1C,EAASuC,GAAKC,EAAOC,EAAUC,QAqJrD3D,CAA6C2E,I,SClJtDgB,G,uKACF,WAEI9I,KAAKC,MAAM2H,W,oBAEf,WACI,OACI,8BACI,cAAC,KAAD,CAAUmB,GAAG,Y,GARRjI,aAaNqC,eAAQ,MAnBI,SAAAiB,GACvB,MAAO,CACHwD,OAAQ,kBAAMxD,EAASwD,UAiBhBzE,CAAkC2F,ICV3CE,G,4MACF5G,MAAQ,CACJ6G,WAAW,G,uDAEf,c,oBAOA,WAEI,IAAIC,EAAQ,KAeZ,OAbIA,EADqB,OAArBlJ,KAAKC,MAAMuC,MAEP,cAAC2G,EAAA,EAAD,UACI,cAAC,KAAD,CAASJ,GAAG,SAAStJ,UAAU,OAA/B,sBAMJ,cAAC0J,EAAA,EAAD,UACI,cAAC,KAAD,CAASJ,GAAG,UAAUtJ,UAAU,OAAhC,uBAKR,qBAAKA,UAAU,aAAf,SACI,eAAC2J,GAAA,EAAD,CAAQzJ,MAAO,CACXkJ,gBAAiB,UACjBQ,OAAQ,QAFZ,UAKI,cAACC,GAAA,EAAD,CAAaC,KAAK,IAAI9J,UAAU,gBAAhC,SACI,sBAAMA,UAAU,WAAhB,kCAGJ,eAAC+J,GAAA,EAAD,CAAK/J,UAAU,UAAf,UACI,eAACgK,GAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,EAAChK,MAAO,GAA1C,UACI,cAACiK,GAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,EAACpK,UAAU,OAApC,wBAGA,eAACqK,GAAA,EAAD,CAAcC,OAAK,EAACpK,MAAO,CAAEkJ,gBAAiB,UAAWmB,UAAW,IAApE,UACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,CAASlB,GAAG,aAAatJ,UAAU,QAAnC,yBAEJ,cAACwK,GAAA,EAAD,UACI,cAAC,KAAD,CAASlB,GAAG,SAAStJ,UAAU,QAA/B,sBAEJ,cAACwK,GAAA,EAAD,UACI,cAAC,KAAD,CAASlB,GAAG,UAAUtJ,UAAU,QAAhC,uBAEJ,cAACwK,GAAA,EAAD,CAAcC,SAAO,IACrB,cAACD,GAAA,EAAD,UACI,cAAC,KAAD,CAASlB,GAAG,IAAItJ,UAAU,QAA1B,0BAIXyJ,c,GA5DJpI,aAqENqC,gBA3ES,SAACf,GAErB,MAAO,CACHI,MAAOJ,EAAMgB,OAAOZ,SAwEbW,CAAyB6F,IC/DlCmB,G,4MACF/H,MAAQ,CAEJuD,WAAY,KACZC,aAAa,G,EAEjB/E,aAAe,SAAAgF,GAEX,EAAKhE,SAAS,CACV8D,WAAYE,EACZD,aAAc,EAAKxD,MAAMwD,e,EAGjCE,OAAS,WACL,EAAKjE,SAAS,CACV+D,aAAc,EAAKxD,MAAMwD,e,uDAGjC,WACI5F,KAAKC,MAAMkF,cACXnF,KAAKC,MAAM+E,kB,oBAEf,WAAU,IAAD,OAEL,GADAe,SAAS1F,MAAQ,YACbL,KAAKC,MAAMmD,OAAO4C,UAClB,OAAO,cAAC,EAAD,IAEN,GAAgC,MAA5BhG,KAAKC,MAAMmD,OAAOoC,OAEvB,OAAO,cAAC/C,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuB1C,KAAKC,MAAMmD,OAAOoC,SAGhD,IAAMS,EAAOjG,KAAKC,MAAMmD,OAAOA,OAAO+C,QAAO,SAAAiE,GAAK,MAAuB,cAAnBA,EAAMC,YAA0BjJ,KAAI,SAAAyE,GACtF,OACI,cAAC,EAAD,CACI3F,SAAU2F,EAEVhF,aAAc,EAAKA,cADdgF,EAAKpC,OAIlByC,EAAa,KACjB,GAA6B,MAAzBlG,KAAKoC,MAAMuD,WAAoB,CAC/B,IAAMxE,EAAWnB,KAAKC,MAAMkB,SAASA,SAASgF,QAAO,SAAA9E,GACjD,OAAOA,EAAQc,SAAW,EAAKC,MAAMuD,WAAWlC,MAEpDyC,EAAa,cAAC,EAAD,CACT5C,KAAMtD,KAAKoC,MAAMuD,WACjBxE,SAAUA,EACVe,WAAYlC,KAAKC,MAAMiC,WACvBhB,kBAAmBlB,KAAKC,MAAMkB,SAAS6E,YAE/C,OACI,8BACI,sBAAKvG,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACKwG,IAEL,qBAAKxG,UAAU,MAAf,SACI,eAAC2G,EAAA,EAAD,CAAOC,OAAQrG,KAAKoC,MAAMwD,YAA1B,UACI,cAACU,EAAA,EAAD,UACKJ,IAEL,cAACK,EAAA,EAAD,UACI,cAACrD,EAAA,EAAD,CAAQtC,QAASZ,KAAK8F,OAAQpD,MAAM,YAApC,mC,GA/DZ5B,aA0ETqC,gBAvFS,SAACf,GACrB,MAAO,CACHgB,OAAQhB,EAAMgB,OACdjC,SAAUiB,EAAMjB,aAGG,SAACiD,GACxB,MAAO,CACHlC,WAAY,SAACC,EAAQZ,EAAQF,GAAjB,OAA6B+C,EAASlC,EAAWC,EAAQZ,EAAQF,KAC7E8D,YAAa,kBAAMf,EAASe,MAC5BH,cAAe,kBAAMZ,EAASY,SA6EvB7B,CAA6CgH,IC1EtDG,G,4MACFlI,MAAQ,CAEJuD,WAAY,KACZC,aAAa,G,EAEjB/E,aAAe,SAAAgF,GAEX,EAAKhE,SAAS,CACV8D,WAAYE,EACZD,aAAc,EAAKxD,MAAMwD,e,EAGjCE,OAAS,WACL,EAAKjE,SAAS,CACV+D,aAAc,EAAKxD,MAAMwD,e,uDAGjC,WACI5F,KAAKC,MAAMkF,cACXnF,KAAKC,MAAM+E,kB,oBAEf,WAAU,IAAD,OAEL,GADAe,SAAS1F,MAAQ,QACbL,KAAKC,MAAMmD,OAAO4C,UAClB,OAAO,cAAC,EAAD,IAEN,GAAgC,MAA5BhG,KAAKC,MAAMmD,OAAOoC,OAEvB,OAAO,cAAC/C,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuB1C,KAAKC,MAAMmD,OAAOoC,SAGhD,IAAMS,EAAOjG,KAAKC,MAAMmD,OAAOA,OAAO+C,QAAO,SAAAiE,GAAK,MAAuB,UAAnBA,EAAMC,YAAsBjJ,KAAI,SAAAyE,GAClF,OACI,cAAC,EAAD,CACI3F,SAAU2F,EAEVhF,aAAc,EAAKA,cADdgF,EAAKpC,OAIlByC,EAAa,KACjB,GAA6B,MAAzBlG,KAAKoC,MAAMuD,WAAoB,CAC/B,IAAMxE,EAAWnB,KAAKC,MAAMkB,SAASA,SAASgF,QAAO,SAAA9E,GACjD,OAAOA,EAAQc,SAAW,EAAKC,MAAMuD,WAAWlC,MAEpDyC,EAAa,cAAC,EAAD,CACT5C,KAAMtD,KAAKoC,MAAMuD,WACjBxE,SAAUA,EACVe,WAAYlC,KAAKC,MAAMiC,WACvBhB,kBAAmBlB,KAAKC,MAAMkB,SAAS6E,YAE/C,OACI,8BACI,sBAAKvG,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACKwG,IAEL,qBAAKxG,UAAU,MAAf,SACI,eAAC2G,EAAA,EAAD,CAAOC,OAAQrG,KAAKoC,MAAMwD,YAA1B,UACI,cAACU,EAAA,EAAD,UACKJ,IAEL,cAACK,EAAA,EAAD,UACI,cAACrD,EAAA,EAAD,CAAQtC,QAASZ,KAAK8F,OAAQpD,MAAM,YAApC,mC,GA/DhB5B,aA0ELqC,gBAvFS,SAACf,GACrB,MAAO,CACHgB,OAAQhB,EAAMgB,OACdjC,SAAUiB,EAAMjB,aAGG,SAACiD,GACxB,MAAO,CACHlC,WAAY,SAACC,EAAQZ,EAAQF,GAAjB,OAA6B+C,EAASlC,EAAWC,EAAQZ,EAAQF,KAC7E8D,YAAa,kBAAMf,EAASe,MAC5BH,cAAe,kBAAMZ,EAASY,SA6EvB7B,CAA6CmH,IC1EtDC,G,4MACFnI,MAAQ,CAEJuD,WAAY,KACZC,aAAa,G,EAEjB/E,aAAe,SAAAgF,GAEX,EAAKhE,SAAS,CACV8D,WAAYE,EACZD,aAAc,EAAKxD,MAAMwD,e,EAGjCE,OAAS,WACL,EAAKjE,SAAS,CACV+D,aAAc,EAAKxD,MAAMwD,e,uDAGjC,WACI5F,KAAKC,MAAMkF,cACXnF,KAAKC,MAAM+E,kB,oBAEf,WAAU,IAAD,OAEL,GADAe,SAAS1F,MAAQ,SACbL,KAAKC,MAAMmD,OAAO4C,UAClB,OAAO,cAAC,EAAD,IAEN,GAAgC,MAA5BhG,KAAKC,MAAMmD,OAAOoC,OAEvB,OAAO,cAAC/C,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuB1C,KAAKC,MAAMmD,OAAOoC,SAGhD,IAAMS,EAAOjG,KAAKC,MAAMmD,OAAOA,OAAO+C,QAAO,SAAAiE,GAAK,MAAuB,WAAnBA,EAAMC,YAAuBjJ,KAAI,SAAAyE,GACnF,OACI,cAAC,EAAD,CACI3F,SAAU2F,EAEVhF,aAAc,EAAKA,cADdgF,EAAKpC,OAIlByC,EAAa,KACjB,GAA6B,MAAzBlG,KAAKoC,MAAMuD,WAAoB,CAC/B,IAAMxE,EAAWnB,KAAKC,MAAMkB,SAASA,SAASgF,QAAO,SAAA9E,GACjD,OAAOA,EAAQc,SAAW,EAAKC,MAAMuD,WAAWlC,MAEpDyC,EAAa,cAAC,EAAD,CACT5C,KAAMtD,KAAKoC,MAAMuD,WACjBxE,SAAUA,EACVe,WAAYlC,KAAKC,MAAMiC,WACvBhB,kBAAmBlB,KAAKC,MAAMkB,SAAS6E,YAE/C,OACI,8BACI,sBAAKvG,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACKwG,IAEL,qBAAKxG,UAAU,MAAf,SACI,eAAC2G,EAAA,EAAD,CAAOC,OAAQrG,KAAKoC,MAAMwD,YAA1B,UACI,cAACU,EAAA,EAAD,UACKJ,IAEL,cAACK,EAAA,EAAD,UACI,cAACrD,EAAA,EAAD,CAAQtC,QAASZ,KAAK8F,OAAQpD,MAAM,YAApC,mC,GA/Df5B,aA0ENqC,gBAvFS,SAACf,GACrB,MAAO,CACHgB,OAAQhB,EAAMgB,OACdjC,SAAUiB,EAAMjB,aAGG,SAACiD,GACxB,MAAO,CACHlC,WAAY,SAACC,EAAQZ,EAAQF,GAAjB,OAA6B+C,EAASlC,EAAWC,EAAQZ,EAAQF,KAC7E8D,YAAa,kBAAMf,EAASe,MAC5BH,cAAe,kBAAMZ,EAASY,SA6EvB7B,CAA6CoH,ICvEtDC,G,uKACJ,WAEExK,KAAKC,MAAMwK,c,oBAEb,WAEE,IAAIvB,EAAQ,KAwBZ,OAtBEA,EADuB,OAArBlJ,KAAKC,MAAMuC,MAEX,eAAC,KAAD,WACE,cAAC,KAAD,CAAOkI,KAAK,SAASC,OAAK,EAACC,UAAW9C,KACtC,cAAC,KAAD,CAAO4C,KAAK,IAAIC,OAAK,EAACC,UAAWlF,IACjC,cAAC,KAAD,CAAOgF,KAAK,aAAaC,OAAK,EAACC,UAAWT,KAC1C,cAAC,KAAD,CAAOO,KAAK,SAASC,OAAK,EAACC,UAAWN,KACtC,cAAC,KAAD,CAAOI,KAAK,UAAUC,OAAK,EAACC,UAAWL,KACvC,cAAC,KAAD,CAAUxB,GAAG,cAKf,eAAC,KAAD,WACE,cAAC,KAAD,CAAO2B,KAAK,IAAIC,OAAK,EAACC,UAAWlF,IACjC,cAAC,KAAD,CAAOgF,KAAK,aAAaC,OAAK,EAACC,UAAWT,KAC1C,cAAC,KAAD,CAAOO,KAAK,SAASC,OAAK,EAACC,UAAWN,KACtC,cAAC,KAAD,CAAOI,KAAK,UAAUC,OAAK,EAACC,UAAWL,KACvC,cAAC,KAAD,CAAOG,KAAK,UAAUC,OAAK,EAACC,UAAW9B,KACvC,cAAC,KAAD,CAAUC,GAAG,SAKjB,sBACEpJ,MAAO,CACLkJ,gBAAiB,UACjBgC,UAAW,SAHf,UAME,cAAC,GAAD,IACA,qCAAQ3B,Y,GAvCapI,aA8CdqC,gBAzDS,SAACf,GAEvB,MAAO,CACLI,MAAOJ,EAAMgB,OAAOZ,UAGG,SAAC4B,GAC1B,MAAO,CACLqG,UAAW,kBAAMrG,GP+CU,SAAAA,GAC3B,IAAM5B,EAAQ4E,aAAa0D,QAAQ,SAEnC,GAAKtI,EAMD,GADuB,IAAI8B,KAAK8C,aAAa0D,QAAQ,oBAC/B,IAAIxG,KAEtBF,EAASwD,UAER,CACD,IAAMnB,EAASW,aAAa0D,QAAQ,UAEpC1G,EAASoC,GAAYhE,EAAOiE,SAXhCrC,EAASwD,aOHFzE,CAA6CqH,I,oCCsB/CO,GAAUC,aAAgB,CACnC5H,OAzFgB,WASJ,IATK6H,EASN,uDATkB,CAC7BjF,WAAW,EACX5C,OAAQ,GACRoC,OAAQ,KACRhD,MAAO,KACPiE,OAAQ,KACRC,aAAa,EACbsB,cAAe,MAEfkD,EAAW,uCACX,OAAQA,EAAOpI,MACX,KAAKgC,EACD,OAAO,6BACAmG,GADP,IAEIjF,WAAW,EACX5C,OAAQ,GACRoC,OAAQ,OAEhB,KAAKV,EACD,OAAO,6BACAmG,GADP,IAEIjF,WAAW,EACX5C,OAAQ8H,EAAOnG,QACfS,OAAQ,OAEhB,KAAKV,EAED,OAAO,6BACAmG,GADP,IAEIjF,WAAW,EACX5C,OAAQ,GACRoC,OAAQ0F,EAAOnG,UAGvB,KAAKD,EACD,OAAO,6BACAmG,GADP,IAEIzI,MAAO0I,EAAOnG,QAAQvC,MACtBiE,OAAQyE,EAAOnG,QAAQ0B,SAE/B,KAAK3B,EACD,OAAO,6BACAmG,GADP,IAEIjD,cAAe,KACfxF,MAAO,KACPiE,OAAQ,OAEhB,KAAK3B,EACD,OAAO,6BACAmG,GADP,IAEIvE,YAAawE,EAAOnG,UAE5B,KAAKD,EACD,OAAO,6BACAmG,GADP,IAEIjD,cAAekD,EAAOnG,UAE9B,QACI,OAAOkG,IAgCf9J,SA5BmB,WAAgE,IAA/DgK,EAA8D,uDAA/C,CAAEnF,WAAW,EAAM7E,SAAU,IAAO+J,EAAW,uCAClF,OAAQA,EAAOpI,MACX,KAAKgC,EACD,OAAO,6BACAqG,GADP,IAEInF,WAAW,EACX7E,SAAU,KAElB,KAAK2D,EACD,OAAO,6BACAqG,GADP,IAEInF,WAAW,EACX7E,SAAU+J,EAAOnG,UAGzB,KAAKD,EACD,IAAIzD,EAAU6J,EAAOnG,QACrB,OAAO,6BACAoG,GADP,IAEIhK,SAAUgK,EAAahK,SAASiK,OAAO/J,KAE/C,QACI,OAAO8J,MClFJE,GAFCC,aAAYP,GAASQ,aAAgBC,OCctCC,OAZf,WACE,OACE,qBAAKhM,UAAU,MAAf,SACE,cAAC,IAAD,CAAUiM,MAAOL,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,WCCKM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnH,MAAK,YAAkD,IAA/CoH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,GAAD,MAEFtG,SAASuG,eAAe,SAM1BX,M","file":"static/js/main.ce0b5fc4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, CardBody, CardHeader, Badge, CardText, CardImg, CardColumns, CardFooter } from 'reactstrap';\r\n\r\n\r\nclass MenuItem extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='col-12 col-md-4 my-3 '>\r\n\r\n                <Card style={{ textAlign: 'left', textTransform: 'capitalize' }} className='cardHgt'>\r\n\r\n                    <CardImg src={\"http://localhost:3002/\" + this.props.dishItem.img} alt={this.props.dishItem.title} className='cardImg' />\r\n\r\n                    <CardBody>\r\n                        <p >Name: <span style={{\r\n                            fontWeight: '2rem',\r\n                            letterSpacing: '2px',\r\n                        }}>{this.props.dishItem.title}</span> </p>\r\n\r\n                        <p>Price: {this.props.dishItem.price} $</p>\r\n\r\n                    </CardBody>\r\n\r\n                    <CardFooter className=\"cardFooter\" style={{ cursor: \"pointer\", textAlign: 'center' }} onClick={() => this.props.onDishSelect(this.props.dishItem)}>View Detailes</CardFooter>\r\n                </Card>\r\n\r\n                <div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MenuItem;","import React from 'react'\r\nimport './Spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <div class=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport dateFormat from 'dateformat';\r\nimport Spinner from './Spinner/Spinner'\r\n\r\nconst LoadComments = props => {\r\n    if (props.commentsIsLoading) {\r\n        <Spinner />\r\n    }\r\n    else {\r\n        return (\r\n\r\n            props.comments.map(comment => {\r\n                return (\r\n                    <div style={{ padding: '15px' }}>\r\n                        <h5>{comment.author}</h5>\r\n                        <p> Comment: {comment.comment}</p>\r\n                        {/* <p>Rating: {comment.rating}</p> */}\r\n                        <p>Date: {dateFormat(comment.date, \"dddd, mmmm dS, yyyy, h:MM TT\")} </p>\r\n\r\n                    </div >\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LoadComments;\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, Input, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log(state);\r\n    return {\r\n        token: state.dishes.token,\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            author: '',\r\n            comment: '',\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        this.props.addComment(this.props.dishId, this.state.author, this.state.comment)\r\n        this.setState({\r\n            author: '',\r\n            comment: '',\r\n        })\r\n\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        let form = null;\r\n        if (this.props.token === null) {\r\n            form = <Alert color='danger'>You have to login to leave a feedback!</Alert>\r\n        }\r\n        else {\r\n            form = (\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Input\r\n                        type='text'\r\n                        name='author'\r\n                        value={this.state.author}\r\n                        placeholder=\"Your Name :\"\r\n                        onChange={this.handleInputChange} required />\r\n                    <br />\r\n                    <Input\r\n                        type='textarea'\r\n                        name='comment'\r\n                        value={this.state.comment}\r\n                        placeholder=\"Your Comment :\"\r\n                        onChange={this.handleInputChange}\r\n                        required />\r\n                    <br />\r\n                    <Button type='submit'>Submit Comment</Button>\r\n                </Form>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(CommentForm);","import React, { Component } from \"react\";\r\nimport { CardText, Card, CardBody, CardImg } from \"reactstrap\";\r\nimport LoadComments from \"./LoadComments\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nclass DishDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            textAlign: \"left\",\r\n            textTransform: \"capitalize\",\r\n          }}\r\n          className=\"cardAnim\"\r\n        >\r\n          <CardImg\r\n            src={\"http://localhost:3002/\" + this.props.dish.img}\r\n            alt={this.props.dish.title}\r\n            className=\"ModalImg\"\r\n          />\r\n\r\n          <CardBody>\r\n            <p style={{ fontWeight: \"1.2rem\" }}>\r\n              Name: {this.props.dish.title}{\" \"}\r\n            </p>\r\n            <p>Price: {this.props.dish.price} $</p>\r\n            <CardText> Description: {this.props.dish.desc}</CardText>\r\n          </CardBody>\r\n          <hr />\r\n          <CardText>\r\n            <LoadComments\r\n              comments={this.props.comments}\r\n              commentsIsLoading={this.props.commentsIsLoading}\r\n            />\r\n          </CardText>\r\n          <CommentForm\r\n            addComment={this.props.addComment}\r\n            dishId={this.props.dish.id}\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishDetail;\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const LOAD_COMMENTS = 'LOAD_COMMENTS';\r\nexport const COMMENTS_LOADING = 'COMMENTS_LOADING';\r\n\r\nexport const LOAD_DISHES = 'LOAD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOADING = 'AUTH_LOADING';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_FAILED = 'AUTH_FAILED';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const addComment = (dishId, author, comment) => dispatch => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        author: author,\r\n        comment: comment,\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    axios.post(\"http://localhost:3002/comments/\", newComment)\r\n        .then(res => res.data)\r\n        .then(comment => dispatch(commentConcat(comment)))\r\n}\r\n\r\nexport const commentConcat = comment => {\r\n    return {\r\n        type: actionTypes.ADD_COMMENT,\r\n        payload: comment,\r\n    }\r\n}\r\nexport const commentsLoading = () => {\r\n    return {\r\n        type: actionTypes.COMMENTS_LOADING,\r\n    }\r\n}\r\nexport const loadComments = comments => {\r\n    return {\r\n        type: actionTypes.LOAD_COMMENTS,\r\n        payload: comments\r\n    }\r\n}\r\nexport const loadDishes = dishes => {\r\n    return {\r\n        type: actionTypes.LOAD_DISHES,\r\n        payload: dishes\r\n    }\r\n}\r\nexport const fetchComments = () => dispatch => {\r\n    dispatch(commentsLoading())\r\n    axios.get(\"http://localhost:3002/comments/\")\r\n        .then(res => res.data)\r\n        .then(com => dispatch(loadComments(com)))\r\n\r\n}\r\n\r\nexport const dishesLoading = () => {\r\n    return {\r\n        type: actionTypes.DISHES_LOADING\r\n    }\r\n}\r\nexport const disheFailed = errMsg => {\r\n    return {\r\n        type: actionTypes.DISHES_FAILED,\r\n        payload: errMsg\r\n    }\r\n}\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n    dispatch(dishesLoading());\r\n    axios.get(\"http://localhost:3002/dishes/\")\r\n        // axios.get(\"gs://photo-gallery1-6d1d0.appspot.com/db.json/dishes/\")\r\n        .then(response => response.data)\r\n        .then(dishes => dispatch(loadDishes(dishes)))\r\n        .catch(error => dispatch(disheFailed(error.message)))\r\n\r\n}","import React, { Component } from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport DishDetail from './DishDetail';\r\nimport './Body.css';\r\nimport { Modal, ModalBody, ModalFooter, Button, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes, fetchComments } from '../../redux/actionCreators';\r\nimport Spinner from '../body/Spinner/Spinner';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: (dishId, author, comment) => dispatch(addComment(dishId, author, comment)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComments: () => dispatch(fetchComments())\r\n    }\r\n}\r\nclass Body extends Component {\r\n    state = {\r\n\r\n        dishSelect: null,\r\n        isModalOpen: false,\r\n    }\r\n    onDishSelect = item => {\r\n\r\n        this.setState({\r\n            dishSelect: item,\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    goBack = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n    }\r\n    render() {\r\n        document.title = 'Photo Gallery';\r\n        if (this.props.dishes.isLoading) {\r\n            return <Spinner />\r\n        }\r\n        else if (this.props.dishes.errMsg != null) {\r\n            // console.log(this.props.dishes.authFailedMsg);\r\n            return <Alert color=\"danger\">{this.props.dishes.errMsg}</Alert>\r\n        }\r\n        else {\r\n            const menu = this.props.dishes.dishes.map(item => {\r\n                return (\r\n                    <MenuItem\r\n                        dishItem={item}\r\n                        key={item.id}\r\n                        onDishSelect={this.onDishSelect} />\r\n                );\r\n            })\r\n            let dishDetail = null;\r\n            if (this.state.dishSelect != null) {\r\n                const comments = this.props.comments.comments.filter(comment => {\r\n                    return comment.dishId === this.state.dishSelect.id;\r\n                })\r\n                dishDetail = <DishDetail\r\n                    dish={this.state.dishSelect}\r\n                    comments={comments}\r\n                    addComment={this.props.addComment}\r\n                    commentsIsLoading={this.props.comments.isLoading} />\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className='container'>\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <Modal isOpen={this.state.isModalOpen}>\r\n                                <ModalBody>\r\n                                    {dishDetail}\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button onClick={this.goBack} color=\"secondary\">Close</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        payload: {\r\n            token: token,\r\n            userId: userId\r\n        }\r\n    }\r\n}\r\nexport const authLoading = isLoading => {\r\n    return {\r\n        type: actionTypes.AUTH_LOADING,\r\n        payload: isLoading\r\n    }\r\n}\r\n\r\nexport const authFailed = errMsg => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        payload: errMsg\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, mode) => dispatch => {\r\n    dispatch(authLoading(true));\r\n    const authData = {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true,\r\n    }\r\n    let authUrl = null;\r\n    if (mode === 'Sign Up') {\r\n        authUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key='\r\n    }\r\n    else {\r\n        authUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key='\r\n    }\r\n    const api_key = \"AIzaSyCSBNflNlxex5Hu0E_UqfJO57fsmMReWps\"\r\n    axios.post(authUrl + api_key, authData)\r\n        .then(response => {\r\n            console.log(response);\r\n            dispatch(authLoading(false));\r\n            localStorage.setItem('token', response.data.idToken)\r\n            localStorage.setItem('userId', response.data.localId)\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('expirationTime', expirationTime)\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(authLoading(false));\r\n            dispatch(authFailed(err.response.data.error.message))\r\n        })\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationTime')\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n\r\n}\r\n\r\nexport const authCheck = () => dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    // console.log(token);\r\n    if (!token) {\r\n        //logout\r\n        dispatch(logout());\r\n    }\r\n    else {\r\n        const expirationTime = new Date(localStorage.getItem('expirationTime'))\r\n        if (expirationTime <= new Date()) {\r\n            //logout\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const userId = localStorage.getItem('userId')\r\n            // console.log(userId);\r\n            dispatch(authSuccess(token, userId))\r\n        }\r\n    }\r\n    // console.log(token);\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Spinner from \"../body/Spinner/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport { auth } from \"../../redux/authActionCreators\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    auth: (email, password, mode) => dispatch(auth(email, password, mode)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authLoading: state.dishes.authLoading,\r\n    authFailedMsg: state.dishes.authFailedMsg,\r\n  };\r\n};\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    mode: \"Sign Up\",\r\n  };\r\n\r\n  switchModeHandler = () => {\r\n    this.setState({\r\n      mode: this.state.mode === \"Sign Up\" ? \"Login\" : \"Sign Up\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    document.title = \"Login\";\r\n    let errMsg = null;\r\n    if (this.props.authFailedMsg !== null) {\r\n      errMsg = <Alert color=\"danger\">{this.props.authFailedMsg}</Alert>;\r\n    }\r\n    let form = null;\r\n    if (this.props.authLoading) {\r\n      form = <Spinner />;\r\n    } else {\r\n      form = (\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n          }}\r\n          onSubmit={(values) => {\r\n            this.props.auth(values.email, values.password, this.state.mode);\r\n            console.log(values);\r\n          }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n\r\n            if (!values.email) {\r\n              errors.email = \"Required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            }\r\n\r\n            if (!values.password) {\r\n              errors.password = \"Required\";\r\n            } else if (values.password.length < 6) {\r\n              errors.password = \"Must be atleast 6 characters!\";\r\n            }\r\n\r\n            if (this.state.mode === \"Sign Up\") {\r\n              if (!values.passwordConfirm) {\r\n                errors.passwordConfirm = \"Required\";\r\n              } else if (values.password !== values.passwordConfirm) {\r\n                errors.passwordConfirm = \"Password field does no match!\";\r\n              }\r\n            }\r\n            //console.log(\"Errors:\", errors)\r\n            return errors;\r\n          }}\r\n        >\r\n          {({ values, handleChange, handleSubmit, errors }) => (\r\n            <div\r\n              style={{\r\n                border: \"1px grey solid\",\r\n                padding: \"15px\",\r\n                borderRadius: \"7px\",\r\n\r\n                // width: '500px',\r\n                margin: \" 0 auto\",\r\n              }}\r\n              className=\"col-md-6\"\r\n            >\r\n              <button\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"#316B83\",\r\n                  color: \"white\",\r\n                }}\r\n                className=\"btn btn-lg\"\r\n                onClick={this.switchModeHandler}\r\n              >\r\n                Switch to {this.state.mode === \"Sign Up\" ? \"Login\" : \"Sign Up\"}\r\n              </button>\r\n              <br />\r\n              <br />\r\n              <form onSubmit={handleSubmit} style={{}}>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Your Email\"\r\n                  className=\"form-control\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <span style={{ color: \"red\" }}>{errors.email}</span>\r\n                <br />\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"form-control\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <span style={{ color: \"red\" }}>{errors.password}</span>\r\n                <br />\r\n\r\n                {this.state.mode === \"Sign Up\" ? (\r\n                  <div>\r\n                    <input\r\n                      name=\"passwordConfirm\"\r\n                      placeholder=\"Confirm Password\"\r\n                      className=\"form-control\"\r\n                      value={values.passwordConfirm}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <span style={{ color: \"red\" }}>\r\n                      {errors.passwordConfirm}\r\n                    </span>\r\n                    <br />\r\n                  </div>\r\n                ) : null}\r\n\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  {this.state.mode === \"Sign Up\" ? \"Sign Up\" : \"Login\"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {errMsg}\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../redux/authActionCreators'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Redirect to=\"/\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, NavItem, Nav, UncontrolledDropdown, DropdownToggle, DropdownItem, DropdownMenu, Collapse, NavbarToggler } from 'reactstrap';\r\nimport './Header.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Auth from '../Auth/Auth';\r\nimport Logout from '../Auth/Logout';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return {\r\n        token: state.dishes.token,\r\n    }\r\n}\r\nclass Header extends Component {\r\n    state = {\r\n        isNavOpen: false,\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n    }\r\n\r\n    // goBack(){\r\n    //     this.props.\r\n    // }\r\n    render() {\r\n        // console.log(this.props.token);\r\n        let links = null;\r\n        if (this.props.token === null) {\r\n            links = (\r\n                <NavItem >\r\n                    <NavLink to=\"/login\" className=\"link\">Login </NavLink>\r\n                </NavItem>\r\n            )\r\n        }\r\n        else {\r\n            links = (\r\n                <NavItem >\r\n                    <NavLink to=\"/logout\" className=\"link\">Logout </NavLink>\r\n                </NavItem>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"Navigation\">\r\n                <Navbar style={{\r\n                    backgroundColor: \"#C9CCD5\",\r\n                    height: \"70px\"\r\n                }}>\r\n\r\n                    <NavbarBrand href='/' className='mr-auto Brand'>\r\n                        <span className='my-style'> Photo Gallery App</span>\r\n                    </NavbarBrand>\r\n\r\n                    <Nav className=\"mr-md-5\">\r\n                        <UncontrolledDropdown nav inNavbar style={{}}>\r\n                            <DropdownToggle nav caret className=\"link\"  >\r\n                                Catagories\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right style={{ backgroundColor: '#F7F6F2', marginTop: '', }}>\r\n                                <DropdownItem>\r\n                                    <NavLink to='/breakfast' className=\"dItem\" >Breakfast</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink to='/lunch' className=\"dItem\">Lunch </NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink to='/shakes' className=\"dItem\">Shakes </NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    <NavLink to='/' className=\"dItem\">All </NavLink>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        {links}\r\n                    </Nav>\r\n\r\n                </Navbar>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, Button, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport MenuItem from '../../MenuItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport DishDetail from '../../DishDetail';\r\nimport { addComment, fetchDishes, fetchComments } from '../../../../redux/actionCreators';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: (dishId, author, comment) => dispatch(addComment(dishId, author, comment)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComments: () => dispatch(fetchComments())\r\n    }\r\n}\r\nclass Breakfast extends Component {\r\n    state = {\r\n\r\n        dishSelect: null,\r\n        isModalOpen: false,\r\n    }\r\n    onDishSelect = item => {\r\n\r\n        this.setState({\r\n            dishSelect: item,\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    goBack = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n    }\r\n    render() {\r\n        document.title = 'Breakfast';\r\n        if (this.props.dishes.isLoading) {\r\n            return <Spinner />\r\n        }\r\n        else if (this.props.dishes.errMsg != null) {\r\n            // console.log(this.props.dishes.authFailedMsg);\r\n            return <Alert color=\"danger\">{this.props.dishes.errMsg}</Alert>\r\n        }\r\n        else {\r\n            const menu = this.props.dishes.dishes.filter(ditem => ditem.category === 'breakfast').map(item => {\r\n                return (\r\n                    <MenuItem\r\n                        dishItem={item}\r\n                        key={item.id}\r\n                        onDishSelect={this.onDishSelect} />\r\n                )\r\n            });\r\n            let dishDetail = null;\r\n            if (this.state.dishSelect != null) {\r\n                const comments = this.props.comments.comments.filter(comment => {\r\n                    return comment.dishId === this.state.dishSelect.id;\r\n                })\r\n                dishDetail = <DishDetail\r\n                    dish={this.state.dishSelect}\r\n                    comments={comments}\r\n                    addComment={this.props.addComment}\r\n                    commentsIsLoading={this.props.comments.isLoading} />\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className='container'>\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <Modal isOpen={this.state.isModalOpen}>\r\n                                <ModalBody>\r\n                                    {dishDetail}\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button onClick={this.goBack} color=\"secondary\">Close</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Breakfast);","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, Button, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport MenuItem from '../../MenuItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport DishDetail from '../../DishDetail';\r\nimport { addComment, fetchDishes, fetchComments } from '../../../../redux/actionCreators';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: (dishId, author, comment) => dispatch(addComment(dishId, author, comment)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComments: () => dispatch(fetchComments())\r\n    }\r\n}\r\nclass Lunch extends Component {\r\n    state = {\r\n\r\n        dishSelect: null,\r\n        isModalOpen: false,\r\n    }\r\n    onDishSelect = item => {\r\n\r\n        this.setState({\r\n            dishSelect: item,\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    goBack = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n    }\r\n    render() {\r\n        document.title = 'Lunch';\r\n        if (this.props.dishes.isLoading) {\r\n            return <Spinner />\r\n        }\r\n        else if (this.props.dishes.errMsg != null) {\r\n            // console.log(this.props.dishes.authFailedMsg);\r\n            return <Alert color=\"danger\">{this.props.dishes.errMsg}</Alert>\r\n        }\r\n        else {\r\n            const menu = this.props.dishes.dishes.filter(ditem => ditem.category === 'lunch').map(item => {\r\n                return (\r\n                    <MenuItem\r\n                        dishItem={item}\r\n                        key={item.id}\r\n                        onDishSelect={this.onDishSelect} />\r\n                )\r\n            });\r\n            let dishDetail = null;\r\n            if (this.state.dishSelect != null) {\r\n                const comments = this.props.comments.comments.filter(comment => {\r\n                    return comment.dishId === this.state.dishSelect.id;\r\n                })\r\n                dishDetail = <DishDetail\r\n                    dish={this.state.dishSelect}\r\n                    comments={comments}\r\n                    addComment={this.props.addComment}\r\n                    commentsIsLoading={this.props.comments.isLoading} />\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className='container'>\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <Modal isOpen={this.state.isModalOpen}>\r\n                                <ModalBody>\r\n                                    {dishDetail}\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button onClick={this.goBack} color=\"secondary\">Close</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lunch);","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, Button, Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport MenuItem from '../../MenuItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport DishDetail from '../../DishDetail';\r\nimport { addComment, fetchDishes, fetchComments } from '../../../../redux/actionCreators';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: (dishId, author, comment) => dispatch(addComment(dishId, author, comment)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComments: () => dispatch(fetchComments())\r\n    }\r\n}\r\nclass Shakes extends Component {\r\n    state = {\r\n\r\n        dishSelect: null,\r\n        isModalOpen: false,\r\n    }\r\n    onDishSelect = item => {\r\n\r\n        this.setState({\r\n            dishSelect: item,\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    goBack = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n    }\r\n    render() {\r\n        document.title = 'Shakes';\r\n        if (this.props.dishes.isLoading) {\r\n            return <Spinner />\r\n        }\r\n        else if (this.props.dishes.errMsg != null) {\r\n            // console.log(this.props.dishes.authFailedMsg);\r\n            return <Alert color=\"danger\">{this.props.dishes.errMsg}</Alert>\r\n        }\r\n        else {\r\n            const menu = this.props.dishes.dishes.filter(ditem => ditem.category === 'shakes').map(item => {\r\n                return (\r\n                    <MenuItem\r\n                        dishItem={item}\r\n                        key={item.id}\r\n                        onDishSelect={this.onDishSelect} />\r\n                )\r\n            });\r\n            let dishDetail = null;\r\n            if (this.state.dishSelect != null) {\r\n                const comments = this.props.comments.comments.filter(comment => {\r\n                    return comment.dishId === this.state.dishSelect.id;\r\n                })\r\n                dishDetail = <DishDetail\r\n                    dish={this.state.dishSelect}\r\n                    comments={comments}\r\n                    addComment={this.props.addComment}\r\n                    commentsIsLoading={this.props.comments.isLoading} />\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className='container'>\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <Modal isOpen={this.state.isModalOpen}>\r\n                                <ModalBody>\r\n                                    {dishDetail}\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button onClick={this.goBack} color=\"secondary\">Close</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shakes);","import React, { Component } from \"react\";\r\nimport Body from \"./body/body\";\r\n// import Footer from \"../Components/footer/footer\";\r\nimport Header from \"./header/Header\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Auth from \"./Auth/Auth\";\r\nimport Logout from \"../Components/Auth/Logout\";\r\nimport { connect } from \"react-redux\";\r\nimport { authCheck } from \"../redux/authActionCreators\";\r\nimport Breakfast from \"./body/Catagories/Breakfast/Breakfast\";\r\nimport Lunch from \"./body/Catagories/Lunch/Lunch\";\r\nimport Shakes from \"./body/Catagories/Shakes/Shakes\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    token: state.dishes.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    authCheck: () => dispatch(authCheck()),\r\n  };\r\n};\r\nclass MainComponents extends Component {\r\n  componentDidMount() {\r\n    // console.log(this.props);\r\n    this.props.authCheck();\r\n  }\r\n  render() {\r\n    // console.log(this.props);\r\n    let links = null;\r\n    if (this.props.token === null) {\r\n      links = (\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={Auth} />\r\n          <Route path=\"/\" exact component={Body} />\r\n          <Route path=\"/breakfast\" exact component={Breakfast} />\r\n          <Route path=\"/lunch\" exact component={Lunch} />\r\n          <Route path=\"/shakes\" exact component={Shakes} />\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      links = (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Body} />\r\n          <Route path=\"/breakfast\" exact component={Breakfast} />\r\n          <Route path=\"/lunch\" exact component={Lunch} />\r\n          <Route path=\"/shakes\" exact component={Shakes} />\r\n          <Route path=\"/logout\" exact component={Logout} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#E8F6EF\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Header />\r\n        <span> {links}</span>\r\n\r\n        {/* <Footer /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponents);\r\n","\r\nimport * as actionTypes from './actionTypes'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst dishReducer = (dishState = {\r\n    isLoading: false,\r\n    dishes: [],\r\n    errMsg: null,\r\n    token: null,\r\n    userId: null,\r\n    authLoading: false,\r\n    authFailedMsg: null,\r\n},\r\n    action) => {\r\n    switch (action.type) {\r\n        case actionTypes.DISHES_LOADING:\r\n            return {\r\n                ...dishState,\r\n                isLoading: true,\r\n                dishes: [],\r\n                errMsg: null,\r\n            }\r\n        case actionTypes.LOAD_DISHES:\r\n            return {\r\n                ...dishState,\r\n                isLoading: false,\r\n                dishes: action.payload,\r\n                errMsg: null,\r\n            }\r\n        case actionTypes.DISHES_FAILED:\r\n            // console.log(action.payload);\r\n            return {\r\n                ...dishState,\r\n                isLoading: false,\r\n                dishes: [],\r\n                errMsg: action.payload,\r\n            }\r\n        //authenticatio\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...dishState,\r\n                token: action.payload.token,\r\n                userId: action.payload.userId,\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...dishState,\r\n                authFailedMsg: null,\r\n                token: null,\r\n                userId: null,\r\n            }\r\n        case actionTypes.AUTH_LOADING:\r\n            return {\r\n                ...dishState,\r\n                authLoading: action.payload,\r\n            }\r\n        case actionTypes.AUTH_FAILED:\r\n            return {\r\n                ...dishState,\r\n                authFailedMsg: action.payload\r\n            }\r\n        default:\r\n            return dishState;\r\n    }\r\n}\r\n\r\nconst commentReducer = (commentState = { isLoading: true, comments: [], }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.COMMENTS_LOADING:\r\n            return {\r\n                ...commentState,\r\n                isLoading: true,\r\n                comments: []\r\n            }\r\n        case actionTypes.LOAD_COMMENTS:\r\n            return {\r\n                ...commentState,\r\n                isLoading: false,\r\n                comments: action.payload\r\n            }\r\n\r\n        case actionTypes.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            return {\r\n                ...commentState,\r\n                comments: commentState.comments.concat(comment)\r\n            }\r\n        default:\r\n            return commentState\r\n    }\r\n}\r\n\r\nexport const Reducer = combineReducers({\r\n    dishes: dishReducer,\r\n    comments: commentReducer,\r\n})\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk'\r\nimport { Reducer } from './reducer';\r\nconst myStore = createStore(Reducer, applyMiddleware(thunk))\r\n\r\nexport default myStore;","\nimport './App.css';\nimport MainComponents from './Components/MainComponents';\nimport myStore from '../src/redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={myStore}>\n        <BrowserRouter>\n          <MainComponents />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}